package timer;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;
//import static sun.audio.AudioPlayer.player;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sush
 */


public class Timer extends javax.swing.JFrame {

    File myfile;
    Player player;
    double minute=0;
    long seconds=0;
    String s;
    int flag=0;
  
    
    public Timer(String title) {
        super(title);
        initComponents();
        
        addWindowListener(new WindowAdapter()
                {
                    public void windowClosing(WindowEvent we)
                    {
                        try
                        {
                         Thread th= new Thread();
                         th.stop();
                         
                          setflag(1);
                          player.close();
                        }catch(NullPointerException e)
                        {}
                        
                    }
                });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        l1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        min = new javax.swing.JTextField();
        sec = new javax.swing.JTextField();
        choose = new javax.swing.JButton();
        play = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(450, 450));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(450, 450));

        jLabel4.setText("Time:");

        l1.setText("minutes");

        jLabel6.setText("seconds");

        min.setText("0");

        choose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/choosebutton.jpg"))); // NOI18N
        choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseActionPerformed(evt);
            }
        });

        play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/playbutton.jpg"))); // NOI18N
        play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                playMouseReleased(evt);
            }
        });
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        jLabel1.setText("Choose File");

        jLabel2.setText("Play");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(choose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l1))
                                .addGap(21, 21, 21)))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(sec, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jLabel1)
                        .addGap(100, 100, 100)
                        .addComponent(jLabel2)))
                .addContainerGap(221, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l1)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(choose, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(210, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseActionPerformed
        
        
        
        FileFilter filter = new FileNameExtensionFilter ("mp3","mpeg3");
        
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(filter);
        
        int returnval=chooser.showOpenDialog(null);
        
        
        
        if (returnval==JFileChooser.APPROVE_OPTION)
        {
                myfile = chooser.getSelectedFile();
        }
        
        
        if (!((myfile+"").matches("(.*)mp3")||(myfile+"").matches("(.*)mpeg3")))
        {
           JOptionPane.showMessageDialog(null,"Invalid file format");
        }
        
        
        
    }//GEN-LAST:event_chooseActionPerformed

    private void playMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playMouseReleased
       
      
      final long x;
      String s = System.getProperty("user.home");
      
      File Directory = new File(s+"/Music");
      final File[] flist = Directory.listFiles();
      
      
      
      
      
        try
        {
          
          minute=Integer.parseInt(min.getText()+"");
          seconds=Integer.parseInt(sec.getText()+"");
          
          if (minute<0 || seconds<0) throw new NumberFormatException();
          if (minute==0 && seconds==0) throw new NumberFormatException();
         
          seconds=(long) ((seconds+(minute*60))*1000);
          x=(long) seconds;
          FileInputStream fis = new FileInputStream(myfile);
          BufferedInputStream bis = new BufferedInputStream(fis);
          player = new Player(bis);
          Thread th1 = new Thread()
             {
                
                 public void run()
                 {
                     int i=0;
                     
                     try {
         
                         player.play();
                         //System.out.println("hello");
                         
                         while (getflag()==0)
                         {
                             String s=flist[i]+"";
                            
                              if (s.matches("(.*).mp3"))
                              {
                                FileInputStream fis = new FileInputStream(flist[i]);
                                BufferedInputStream bis = new BufferedInputStream(fis);
                                player = new Player(bis);
                                player.play();
                              }
                              
                              i=(i+1)%flist.length;
                            
                         }
                 
                     } catch (JavaLayerException ex) {
                         Logger.getLogger(Timer.class.getName()).log(Level.SEVERE, null, ex);
                     } 
                     catch (FileNotFoundException ex) {
                         Logger.getLogger(Timer.class.getName()).log(Level.SEVERE, null, ex);
                     }
                 }
                 
                 
                 
                 
             };
             th1.start();
             
             
             

             Thread th2;
          th2 = new Thread()
          {
              public void run()
              {
                  while(true)
                  {
                      try {
                          Thread.sleep(x);
                          setflag(1);
                          player.close();
                          
                          
                      } catch (InterruptedException ex) {
                          Logger.getLogger(Timer.class.getName()).log(Level.SEVERE, null, ex);
                      }
                      break;
                  }
                  
                  
                  
              }
              
              
          };
              th2.start();
              
              
              
             
        }  
        
       catch(NumberFormatException e2)
       {
          JOptionPane.showMessageDialog(null,"Enter valid time");
       }
       
       catch (JavaLayerException e)
        {
          System.out.println("Choose an mp3 file");
        }   
       
        catch (Exception e)
        {
             JOptionPane.showMessageDialog(null,"Choose mp3 file");
        }    
            
       
                   

        
       
       
        
    }//GEN-LAST:event_playMouseReleased

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playActionPerformed

    public void setflag(int l)
    {
       flag=l;
    }
    
    public int getflag()
    {
       return flag;
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Timer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Timer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Timer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Timer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Timer("Timer").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton choose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel l1;
    private javax.swing.JTextField min;
    private javax.swing.JButton play;
    private javax.swing.JTextField sec;
    // End of variables declaration//GEN-END:variables
}
