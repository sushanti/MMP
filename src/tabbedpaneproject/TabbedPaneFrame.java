/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tabbedpaneproject;

import mp3Package.*;
import karaokePackage.*;
import java.io.File;
import static java.util.Locale.filter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import org.jaudiotagger.audio.AudioFile;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.FontMetrics;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.jaudiotagger.Test;
import org.jaudiotagger.audio.AudioFile;
import org.jaudiotagger.audio.AudioFileIO;
import org.jaudiotagger.audio.exceptions.CannotReadException;
import org.jaudiotagger.audio.exceptions.InvalidAudioFrameException;
import org.jaudiotagger.audio.exceptions.ReadOnlyFileException;
import org.jaudiotagger.tag.TagException;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import javax.sound.midi.MetaEventListener;
import javax.sound.midi.MetaMessage;
import javax.sound.midi.MidiSystem;
import javax.sound.midi.MidiUnavailableException;
import javax.sound.midi.Sequence;
import javax.sound.midi.Sequencer;
import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.SourceDataLine;
import javax.sound.sampled.TargetDataLine;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.JTextComponent;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;

/**
 *
 * @author Sonia Kulkarni
 */
public class TabbedPaneFrame extends javax.swing.JFrame {
    
     MainClass MC = new MainClass();
     
    public int musicflag=0;
    static int count;
    Sequencer sequencer;
    File karaokefile;
    static int z;
    KaraokeOperations karaoke = new KaraokeOperations();
    Soundcapture obj;
    private AudioFile audioFile;
    File trimfile=null;
    int trimflag;
    private int trim1;
    private int trim2;
    private long bitrate;
    FileFilter filter;
    File timerfile;
    Player timerplayer;
    double minute=0;
    long seconds=0;
    String s;
    int timerflag=0;
    
    final int bufSize = 16384;

  tabbedpaneproject.TabbedPaneFrame.Playback playback=new tabbedpaneproject.TabbedPaneFrame.Playback();
  tabbedpaneproject.TabbedPaneFrame.Capture capture=new tabbedpaneproject.TabbedPaneFrame.Capture();
    voicePackage.Soundcapture o = new voicePackage.Soundcapture();
    
  AudioInputStream audioInputStream;
  
  JTextField textField;

  String errStr;

  double duration, voiceseconds;

  File file;

    static String[] arguments;
    /**
     * Creates new form TabbedPaneFrame
     */
    public TabbedPaneFrame(String title) {
        super(title);
        initComponents();
        
        try{
                   //UIManager.setLookAndFeel("com.easynth.lookandfeel.EaSynthLookAndFeel");
                    //  UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
                    UIManager.setLookAndFeel("com.seaglasslookandfeel.SeaGlassLookAndFeel");
                   // UIManager.setLookAndFeel("de.muntjak.tinylookandfeel.TinyLookAndFeel");
                }catch(Exception e)
                {
                    System.out.println("CustomGUIException");
                }
        
        playA.setEnabled(false);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPaneAudio = new javax.swing.JTabbedPane();
        jPanelMP3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        Play = new javax.swing.JButton();
        Pause = new javax.swing.JButton();
        Stop = new javax.swing.JButton();
        SelectFile = new javax.swing.JButton();
        Display = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanelKaraoke = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        captB = new javax.swing.JButton();
        Open = new javax.swing.JButton();
        play = new javax.swing.JButton();
        Stop1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanelTrimmer = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        chooser = new javax.swing.JButton();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        b3 = new javax.swing.JButton();
        trim = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        Slider = new javax.swing.JSlider();
        text1 = new javax.swing.JLabel();
        text2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanelVoiceRecorder = new javax.swing.JPanel();
        playA = new javax.swing.JButton();
        captA = new javax.swing.JButton();
        jPanelTimer = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        l1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        min = new javax.swing.JTextField();
        sec = new javax.swing.JTextField();
        choose = new javax.swing.JButton();
        play1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTabbedPaneVideo = new javax.swing.JTabbedPane();
        jPanelMP4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(465, 550));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));

        jTabbedPaneAudio.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPaneAudio.setForeground(java.awt.Color.black);

        jPanelMP3.setBackground(new java.awt.Color(255, 255, 255));
        jPanelMP3.setForeground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Play.setBackground(new java.awt.Color(255, 255, 255));
        Play.setForeground(new java.awt.Color(255, 255, 255));
        Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/playbutton.jpg"))); // NOI18N
        Play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PlayMouseReleased(evt);
            }
        });

        Pause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/pausebutton.jpg"))); // NOI18N
        Pause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PauseMouseReleased(evt);
            }
        });
        Pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PauseActionPerformed(evt);
            }
        });

        Stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/stopbutton.jpg"))); // NOI18N
        Stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                StopMouseReleased(evt);
            }
        });

        SelectFile.setBackground(new java.awt.Color(255, 255, 255));
        SelectFile.setForeground(new java.awt.Color(255, 255, 255));
        SelectFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/choosebutton.jpg"))); // NOI18N
        SelectFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SelectFileMouseReleased(evt);
            }
        });

        Display.setFont(new java.awt.Font("gargi", 3, 14)); // NOI18N
        Display.setForeground(new java.awt.Color(20, 26, 28));

        jLabel4.setText("Choose File");

        jLabel17.setText("Stop");

        jLabel18.setText("Play");

        jLabel19.setText("Pause");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jLabel17))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel18)
                                .addGap(117, 117, 117)
                                .addComponent(jLabel19))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Play, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(Pause, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Display, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(Display, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Play, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Pause, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)))
                .addContainerGap(306, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelMP3Layout = new javax.swing.GroupLayout(jPanelMP3);
        jPanelMP3.setLayout(jPanelMP3Layout);
        jPanelMP3Layout.setHorizontalGroup(
            jPanelMP3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMP3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMP3Layout.setVerticalGroup(
            jPanelMP3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMP3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPaneAudio.addTab("MP3 Player", jPanelMP3);

        jPanelKaraoke.setBackground(new java.awt.Color(255, 255, 255));
        jPanelKaraoke.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(450, 450));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("LYRICS ");

        display.setColumns(5);
        display.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        display.setForeground(new java.awt.Color(0, 0, 153));
        display.setLineWrap(true);
        display.setRows(3);
        display.setTabSize(3);
        display.setWrapStyleWord(true);
        display.setAutoscrolls(false);
        display.setMaximumSize(new java.awt.Dimension(221, 200));
        display.setSelectionColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(display);

        captB.setBackground(new java.awt.Color(255, 255, 255));
        captB.setForeground(new java.awt.Color(255, 255, 255));
        captB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/recordbutton.jpg"))); // NOI18N
        captB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captBActionPerformed(evt);
            }
        });

        Open.setBackground(new java.awt.Color(255, 255, 255));
        Open.setForeground(new java.awt.Color(255, 255, 255));
        Open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/choosebutton.jpg"))); // NOI18N
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });

        play.setBackground(new java.awt.Color(255, 255, 255));
        play.setForeground(new java.awt.Color(255, 255, 255));
        play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/playbutton.jpg"))); // NOI18N
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        Stop1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/stopbutton.jpg"))); // NOI18N
        Stop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Stop1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Play");

        jLabel7.setText("Choose File");

        jLabel8.setText("Record");

        jLabel9.setText("Stop");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(captB, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(jLabel8)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel9))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(Open, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(Stop1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel2)
                        .addGap(126, 126, 126)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Open, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Stop1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(captB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)))
                .addGap(0, 128, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelKaraokeLayout = new javax.swing.GroupLayout(jPanelKaraoke);
        jPanelKaraoke.setLayout(jPanelKaraokeLayout);
        jPanelKaraokeLayout.setHorizontalGroup(
            jPanelKaraokeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
        );
        jPanelKaraokeLayout.setVerticalGroup(
            jPanelKaraokeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );

        jTabbedPaneAudio.addTab("Karaoke", jPanelKaraoke);

        jPanelTrimmer.setBackground(new java.awt.Color(255, 255, 255));
        jPanelTrimmer.setForeground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        chooser.setBackground(new java.awt.Color(255, 255, 255));
        chooser.setForeground(new java.awt.Color(255, 255, 255));
        chooser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/choosebutton.jpg"))); // NOI18N
        chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooserActionPerformed(evt);
            }
        });

        l2.setText("Point 1");

        l3.setText("Point 2");

        b3.setBackground(new java.awt.Color(255, 255, 255));
        b3.setForeground(new java.awt.Color(255, 255, 255));
        b3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/resetbutton.jpg"))); // NOI18N
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        trim.setBackground(new java.awt.Color(255, 255, 255));
        trim.setForeground(new java.awt.Color(255, 255, 255));
        trim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/trimbutton.jpg"))); // NOI18N
        trim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trimActionPerformed(evt);
            }
        });

        b2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/lockbutton.png"))); // NOI18N
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/lockbutton.png"))); // NOI18N
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        Slider.setValue(0);
        Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderStateChanged(evt);
            }
        });

        jLabel10.setText("Choose File");

        jLabel11.setText("Lock 1");

        jLabel12.setText("Lock 2");

        jLabel13.setText("Reset");

        jLabel6.setText("Trim");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l2)
                                    .addComponent(l3))
                                .addGap(66, 66, 66)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(text1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(text2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap(50, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel13)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(trim, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l2)
                                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(86, 86, 86)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(l3)
                                        .addComponent(jLabel12))
                                    .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel11))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(trim, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel6))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelTrimmerLayout = new javax.swing.GroupLayout(jPanelTrimmer);
        jPanelTrimmer.setLayout(jPanelTrimmerLayout);
        jPanelTrimmerLayout.setHorizontalGroup(
            jPanelTrimmerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTrimmerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelTrimmerLayout.setVerticalGroup(
            jPanelTrimmerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPaneAudio.addTab("Trimmer", jPanelTrimmer);

        jPanelVoiceRecorder.setBackground(new java.awt.Color(255, 255, 255));
        jPanelVoiceRecorder.setForeground(new java.awt.Color(255, 255, 255));

        playA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/playbutton.jpg"))); // NOI18N
        playA.setText("Play");
        playA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAActionPerformed(evt);
            }
        });

        captA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/recordbutton.jpg"))); // NOI18N
        captA.setText("Record");
        captA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelVoiceRecorderLayout = new javax.swing.GroupLayout(jPanelVoiceRecorder);
        jPanelVoiceRecorder.setLayout(jPanelVoiceRecorderLayout);
        jPanelVoiceRecorderLayout.setHorizontalGroup(
            jPanelVoiceRecorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVoiceRecorderLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(playA, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(captA, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanelVoiceRecorderLayout.setVerticalGroup(
            jPanelVoiceRecorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVoiceRecorderLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(jPanelVoiceRecorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playA)
                    .addComponent(captA))
                .addContainerGap(285, Short.MAX_VALUE))
        );

        jTabbedPaneAudio.addTab("Voice Recorder", jPanelVoiceRecorder);

        jPanelTimer.setBackground(new java.awt.Color(255, 255, 255));
        jPanelTimer.setForeground(new java.awt.Color(255, 255, 255));
        jPanelTimer.setPreferredSize(new java.awt.Dimension(450, 450));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(450, 450));

        jLabel5.setText("Time:");

        l1.setText("minutes");

        jLabel14.setText("seconds");

        min.setText("0");

        choose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/choosebutton.jpg"))); // NOI18N
        choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseActionPerformed(evt);
            }
        });

        play1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/playbutton.jpg"))); // NOI18N
        play1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                play1MouseReleased(evt);
            }
        });
        play1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play1ActionPerformed(evt);
            }
        });

        jLabel15.setText("Choose File");

        jLabel16.setText("Play");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(choose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(46, 46, 46)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l1))
                                .addGap(21, 21, 21)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(sec, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(play1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jLabel15)
                        .addGap(120, 120, 120)
                        .addComponent(jLabel16)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l1)
                    .addComponent(jLabel14)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(choose, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(play1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addContainerGap(210, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelTimerLayout = new javax.swing.GroupLayout(jPanelTimer);
        jPanelTimer.setLayout(jPanelTimerLayout);
        jPanelTimerLayout.setHorizontalGroup(
            jPanelTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
        );
        jPanelTimerLayout.setVerticalGroup(
            jPanelTimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTimerLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPaneAudio.addTab("Timer", jPanelTimer);

        jTabbedPane1.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Pics/index2.jpg")), jTabbedPaneAudio); // NOI18N

        jPanelMP4.setBackground(new java.awt.Color(255, 255, 255));
        jPanelMP4.setPreferredSize(new java.awt.Dimension(450, 450));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/choosebutton.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel20.setText("Click below to choose a file");

        javax.swing.GroupLayout jPanelMP4Layout = new javax.swing.GroupLayout(jPanelMP4);
        jPanelMP4.setLayout(jPanelMP4Layout);
        jPanelMP4Layout.setHorizontalGroup(
            jPanelMP4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMP4Layout.createSequentialGroup()
                .addContainerGap(169, Short.MAX_VALUE)
                .addGroup(jPanelMP4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMP4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(185, 185, 185))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMP4Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(160, 160, 160))))
        );
        jPanelMP4Layout.setVerticalGroup(
            jPanelMP4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMP4Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(314, Short.MAX_VALUE))
        );

        jTabbedPaneVideo.addTab("MP4 Player", jPanelMP4);

        jTabbedPane1.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Pics/images2.jpg")), jTabbedPaneVideo); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PlayMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlayMouseReleased
        try
        {
            if(musicflag==0)
            MC.Resume();
            musicflag=1;
        }

        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(null,"Choose .mp3 file");
        }
    }//GEN-LAST:event_PlayMouseReleased

    private void PauseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PauseMouseReleased
        musicflag=0;
        MC.Pause();

    }//GEN-LAST:event_PauseMouseReleased

    private void StopMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StopMouseReleased
        musicflag=0;
        MC.Stop();
    }//GEN-LAST:event_StopMouseReleased

    private void SelectFileMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectFileMouseReleased

        FileFilter filter = new FileNameExtensionFilter ("mp3","mpeg3");

        JFileChooser chooser = new JFileChooser("C:\\Users\\sush\\Music\\Dhoom 3");
        chooser.addChoosableFileFilter(filter);
        musicflag=1;

        int returnval = chooser.showOpenDialog(null);

        if (returnval== JFileChooser.APPROVE_OPTION)
        {
            MC.Stop();
            File myfile = chooser.getSelectedFile();
            String song =myfile+"";
            String name= chooser.getSelectedFile().getName();
            Display.setText(name);

            try {
                if (song.matches("(.*).mp3"))
                MC.Play(song);

                else
                throw new Exception();
            }
            catch (Exception ex)
            {
                JOptionPane.showMessageDialog(null,"Invalid file format");
            }

        }
    }//GEN-LAST:event_SelectFileMouseReleased

    private void captBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captBActionPerformed

        obj.captB.doClick();
        captB.setEnabled(false);

    }//GEN-LAST:event_captBActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        boolean check=karaoke.OpenFile();
        this.karaokefile=karaoke.sendFile();
        if(check==true)
        {
            play.setVisible(true);
            Open.setEnabled(false);
        }

        else
        {
            JOptionPane.showMessageDialog(null,"Required .kar file");
        }
        obj=new Soundcapture(karaokefile);
    }//GEN-LAST:event_OpenActionPerformed

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed

        try {
            int i;
            sequencer = MidiSystem.getSequencer();
            if (sequencer == null)
            throw new MidiUnavailableException();

            sequencer.open();
            FileInputStream is = new FileInputStream(karaokefile);
            Sequence Seq = MidiSystem.getSequence(is);
            sequencer.setSequence(Seq);
            play.setEnabled(false);
            captB.setEnabled(true);
            Stop.setEnabled(true);
            sequencer.addMetaEventListener(new MetaEventListener()
                {
                    public void meta(MetaMessage event) {

                        byte b[] = event.getData();
                        String str = new String(b);

                        count=getLineCountAsSeen(display);

                        if(count>2)
                        {
                            display.setText("");
                        }
                        display.append(str);

                    }

                });
                sequencer.start();
            }
            catch (Exception e)
            {
                //e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Choose File");
            }

    }//GEN-LAST:event_playActionPerformed

    private void Stop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Stop1ActionPerformed

        obj.captB.doClick();
        captB.setEnabled(true);

    }//GEN-LAST:event_Stop1ActionPerformed

    private void chooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooserActionPerformed

        filter = new FileNameExtensionFilter ("mp3","mpeg3");

        JFileChooser chooser = new JFileChooser("F:\\Songs\\New");
        chooser.addChoosableFileFilter(filter);

        int returnval = chooser.showOpenDialog(null);

        if (returnval== JFileChooser.APPROVE_OPTION)
        {
            trimfile = chooser.getSelectedFile();

            String str=trimfile+"";
            boolean res = str.matches("(.*).mp3");
            System.out.println(res+"");
            if (res==false)
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Choose .mp3 file");
            }
            else{
                System.out.println("");
            }

        }

        try {
            audioFile = AudioFileIO.read(trimfile);

            int duration= audioFile.getAudioHeader().getTrackLength();

            bitrate= audioFile.getAudioHeader().getBitRateAsNumber();

            Slider.setMaximum(duration);
            //System.out.println("Slider max="+Slider.getMaximum());

        } catch (CannotReadException | IOException | TagException | ReadOnlyFileException | InvalidAudioFrameException ex)
        {
            System.out.println("");
        }
        catch(Exception e){
            System.out.println("");
        }
    }//GEN-LAST:event_chooserActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        Slider.setValue(0);
    }//GEN-LAST:event_b3ActionPerformed

    private void trimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trimActionPerformed
        int x;

        if(filter==null)
        {

            javax.swing.JOptionPane.showMessageDialog(null,"Choose a file");

        }
        /*else if(t2==0)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"lock the points to trim");
        }*/

        else{

            if (trim2!=0 && trim1<trim2 )
            {
                FileInputStream fis=null;
                FileOutputStream fos=null;

                try
                {

                    fis = new FileInputStream(trimfile);
                    String filestring=trimfile+"";

                    byte[] buffer = new byte[512];
                    fos = new FileOutputStream(filestring+"ringtone.mp3");
                    int k=0;
                    while((x=fis.read(buffer))!=-1)
                    {
                        k=k+x;

                        if ((k>=(trim1*bitrate*1000)/8)&&(k<=(trim2*bitrate*1000)/8))
                        {
                            fos.write(buffer, 0, x);
                        }
                    }
                    JOptionPane.showMessageDialog(null,"Build Successful");

                }

                catch(FileNotFoundException e1)
                {
                    System.out.println("File not found");

                }
                catch (IOException ex)
                {
                    Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
                }

                finally
                {
                    try
                    {
                        fis.close();
                        fos.close();

                    }

                    catch(Exception e)
                    {
                        System.out.println("Exception");

                    }

                }
            }

            else
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Enter valid time");
            }
    }//GEN-LAST:event_trimActionPerformed
    }
    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        // TODO add your handling code here:
        if(filter==null)
        {

            javax.swing.JOptionPane.showMessageDialog(null,"Choose a file");

        }
        /*else if(t1==0)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"lock 1st point before locking 2nd point");
        }*/
        else{
            trim2=Integer.parseInt(text2.getText()+"");
            trimflag=0;
        }
    }//GEN-LAST:event_b2ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
        if(filter==null)
        {

            javax.swing.JOptionPane.showMessageDialog(null,"Choose a file");

        }
        else{

            trim1=Integer.parseInt(text1.getText()+"");

            trimflag=1;
        }
    }//GEN-LAST:event_b1ActionPerformed

    private void SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderStateChanged
        // TODO add your handling code here:
        if(filter==null)
        {

            javax.swing.JOptionPane.showMessageDialog(null,"Choose a file");

        }
        else{
            if (trimflag==0){
                text1.setText(""+Slider.getValue());
                text2.setText("");
            }

            else if (trimflag==1)
            {
                text2.setText(""+Slider.getValue());
                text1.setText("");
            }

        }
    }//GEN-LAST:event_SliderStateChanged

    private void chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseActionPerformed

        FileFilter filter = new FileNameExtensionFilter ("mp3","mpeg3");

        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(filter);

        int returnval=chooser.showOpenDialog(null);

        if (returnval==JFileChooser.APPROVE_OPTION)
        {
            timerfile = chooser.getSelectedFile();
        }

        if (!((timerfile+"").matches("(.*)mp3")||(timerfile+"").matches("(.*)mpeg3")))
        {
            JOptionPane.showMessageDialog(null,"Invalid file format");
        }

    }//GEN-LAST:event_chooseActionPerformed

    private void play1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_play1MouseReleased

        final long x;
        String s = System.getProperty("user.home");

        File Directory = new File(s+"/Music");
        final File[] flist = Directory.listFiles();

        try
        {

            minute=Integer.parseInt(min.getText()+"");
            seconds=Integer.parseInt(sec.getText()+"");

            if (minute<0 || seconds<0) throw new NumberFormatException();
            if (minute==0 && seconds==0) throw new NumberFormatException();

            seconds=(long) ((seconds+(minute*60))*1000);
            x=(long) seconds;
            FileInputStream fis = new FileInputStream(timerfile);
            BufferedInputStream bis = new BufferedInputStream(fis);
            timerplayer = new Player(bis);
            Thread th1 = new Thread()
            {

                public void run()
                {
                    int i=0;

                    try {

                        timerplayer.play();
                        //System.out.println("hello");

                        while (getflag()==0)
                        {
                            String s=flist[i]+"";

                            if (s.matches("(.*).mp3"))
                            {
                                FileInputStream fis = new FileInputStream(flist[i]);
                                BufferedInputStream bis = new BufferedInputStream(fis);
                                timerplayer = new Player(bis);
                                timerplayer.play();
                            }

                            i=(i+1)%flist.length;

                        }

                    } catch (JavaLayerException ex) {
                        //Logger.getLogger(Timer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    catch (FileNotFoundException ex) {
                        //Logger.getLogger(Timer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            };
            th1.start();

            Thread th2;
            th2 = new Thread()
            {
                public void run()
                {
                    while(true)
                    {
                        try {
                            Thread.sleep(x);
                            setflag(1);
                            timerplayer.close();

                        } catch (InterruptedException ex) {
                            //Logger.getLogger(Timer.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }

                }

            };
            th2.start();

        }

        catch(NumberFormatException e2)
        {
            JOptionPane.showMessageDialog(null,"Enter valid time");
        }

        catch (JavaLayerException e)
        {
            System.out.println("Choose an mp3 file");
        }

        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Choose mp3 file");
        }

    }//GEN-LAST:event_play1MouseReleased

    private void play1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_play1ActionPerformed

    public class Playback implements Runnable {

    SourceDataLine line;

    Thread thread;

    public void start() {
      errStr = null;
      thread = new Thread(this);
      thread.setName("Playback");
      thread.start();
    }

    public void stop() {
      thread = null;
    }

    private void shutDown(String message) {
      if ((errStr = message) != null) {
        System.err.println(errStr);
      }
      if (thread != null) {
        thread = null;
        captA.setEnabled(true);
        playA.setText("Play");
      }
    }

    public void run() {

      // make sure we have something to play
        
      if (audioInputStream == null) {
        shutDown("No loaded audio to play back");
        return;
      }
      // reset to the beginnning of the stream
      try {
        audioInputStream.reset();
      } catch (Exception e) {
        shutDown("Unable to reset the stream\n" + e);
        return;
      }

      // get an AudioInputStream of the desired format for playback

      AudioFormat.Encoding encoding = AudioFormat.Encoding.PCM_SIGNED;
      float rate = 44100.0f;
      int channels = 2;
      int frameSize = 4;
      int sampleSize = 16;
      boolean bigEndian = true;

      AudioFormat format = new AudioFormat(encoding, rate, sampleSize, channels, (sampleSize / 8)
          * channels, rate, bigEndian);

      AudioInputStream playbackInputStream = AudioSystem.getAudioInputStream(format,
          audioInputStream);

      if (playbackInputStream == null) {
        shutDown("Unable to convert stream of format " + audioInputStream + " to format " + format);
        return;
      }

      // define the required attributes for our line,
      // and make sure a compatible line is supported.

      DataLine.Info info = new DataLine.Info(SourceDataLine.class, format);
      if (!AudioSystem.isLineSupported(info)) {
        shutDown("Line matching " + info + " not supported.");
        return;
      }

      // get and open the source data line for playback.

      try {
        line = (SourceDataLine) AudioSystem.getLine(info);
        line.open(format, bufSize);
      } catch (LineUnavailableException ex) {
        shutDown("Unable to open the line: " + ex);
        return;
      }

      // play back the captured audio data

      int frameSizeInBytes = format.getFrameSize();
      int bufferLengthInFrames = line.getBufferSize() / 8;
      int bufferLengthInBytes = bufferLengthInFrames * frameSizeInBytes;
      byte[] data = new byte[bufferLengthInBytes];
      int numBytesRead = 0;

      // start the source data line
      line.start();

      while (thread != null) {
        try {
          if ((numBytesRead = playbackInputStream.read(data)) == -1) {
            break;
          }
          int numBytesRemaining = numBytesRead;
          while (numBytesRemaining > 0) {
            numBytesRemaining -= line.write(data, 0, numBytesRemaining);
          }
        } catch (Exception e) {
          shutDown("Error during playback: " + e);
          break;
        }
      }
      // we reached the end of the stream.
      // let the data play out, then
      // stop and close the line.
      if (thread != null) {
        line.drain();
      }
      line.stop();
      line.close();
      line = null;
      shutDown(null);
    }
  } //End of class playback
    
    class Capture implements Runnable {

    TargetDataLine line;

    Thread thread;
        private OutputStream outputStream;

    public void start() {
      errStr = null;
      thread = new Thread(this);
      thread.setName("Capture");
      thread.start();
    }

    public void stop() {
      thread = null;
      
    }

    private void shutDown(String message) {
      if ((errStr = message) != null && thread != null) {
        thread = null;
        playA.setEnabled(true);
        captA.setText("Record");
        System.err.println(errStr);
      }
    }

    @Override
    public void run() {

      duration = 0;
      audioInputStream = null;
      int z=1;

      // define the required attributes for our line,
      // and make sure a compatible line is supported.

      AudioFormat.Encoding encoding = AudioFormat.Encoding.PCM_SIGNED;
      float rate = 44100.0f;
      int channels = 2;
      int frameSize = 4;
      int sampleSize = 16;
      boolean bigEndian = true;

      AudioFormat format = new AudioFormat(encoding, rate, sampleSize, channels, (sampleSize / 8)
          * channels, rate, bigEndian);

      DataLine.Info info = new DataLine.Info(TargetDataLine.class, format);

      if (!AudioSystem.isLineSupported(info)) {
        shutDown("Line matching " + info + " not supported.");
        return;
      }

      // get and open the target data line for capture.

      try {
          
        line = (TargetDataLine) AudioSystem.getLine(info);
        line.open(format, line.getBufferSize());
      } catch (LineUnavailableException ex) {
        shutDown("Unable to open the line: " + ex);
        return;
      } catch (SecurityException ex) {
        shutDown(ex.toString());
        //JavaSound.showInfoDialog();
        return;
      } catch (Exception ex) {
        shutDown(ex.toString());
        return;
      }

      // play back the captured audio data
      
      ByteArrayOutputStream out = new ByteArrayOutputStream();
      int frameSizeInBytes = format.getFrameSize();
      int bufferLengthInFrames = line.getBufferSize() / 8;
      int bufferLengthInBytes = bufferLengthInFrames * frameSizeInBytes;
      byte[] data = new byte[bufferLengthInBytes];
      int numBytesRead;
    
      
     
     
     
      line.start();

      while (thread != null) {
        if ((numBytesRead = line.read(data, 0, bufferLengthInBytes)) == -1) {
          break;
        }
        
        out.write(data, 0, numBytesRead);
      }
         
      // we reached the end of the stream.
      // stop and close the line.
      line.stop();
      line.close();
      line = null;
      System.out.println("Stopped playing");
      // stop and close the output stream
      try {
        out.flush();
        out.close();
      } catch (IOException ex) {
        ex.printStackTrace();
      }

      // load bytes into the audio input stream for playback
   
      byte audioBytes[] = out.toByteArray();
      ByteArrayInputStream bais = new ByteArrayInputStream(audioBytes);
      audioInputStream = new AudioInputStream(bais, format, audioBytes.length / frameSizeInBytes);
      
      long milliseconds = (long) ((audioInputStream.getFrameLength() * 1000) / format
          .getFrameRate());
      duration = milliseconds / 1000.0;
     
      try {
        audioInputStream.reset();
      } catch (Exception ex) {
        ex.printStackTrace();
        return;
      }
       try {
       
    OutputStream fos; 
    
    fos = new FileOutputStream (new File("Voice_Record"+z+".WAV"));
    out.writeTo(fos);
    while (thread != null) {
        if ((numBytesRead = line.read(data, 0, bufferLengthInBytes)) == -1) {
          break;
        }
        out.write(data, 0, numBytesRead);
      }
} catch(IOException ioe) {
    // Handle exception here
    System.out.println("oooooooooooo");
}      try{
       AudioSystem.write(audioInputStream ,AudioFileFormat.Type.WAVE, new File("Voice_Record"+z+".mp3"));
       z++;
    }catch(IOException e){System.out.println("ufffff");}
    }
  } // End class Capture
    
    private void captAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captAActionPerformed
        // TODO add your handling code here:
         Object obj = evt.getSource();
         if (obj.equals(captA)) {
      if (captA.getText().startsWith("Record")) {
        //capture.start();
         o.captB.doClick();
        playA.setEnabled(false);
        captA.setText("Stop");
        captA.setIcon(new ImageIcon("/home/sush/Documents/TabbedPaneProject/src/Pics/stopbutton.jpg"));
      } else {
       // capture.stop();
        o.captB.doClick();
        playA.setEnabled(true);
        playA.setIcon(new ImageIcon("/home/sush/Documents/TabbedPaneProject/src/Pics/playbutton.jpg"));
      }

    }
        
    }//GEN-LAST:event_captAActionPerformed

    private void playAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAActionPerformed
        // TODO add your handling code here:
        
        Object obj = evt.getSource();
        if (obj.equals(playA)) {
      if (playA.getText().startsWith("Play")) {
        //playback.start();
        captA.setEnabled(false);
        o.playB.doClick();
        playA.setText("Stop");
        playA.setIcon(new ImageIcon("/home/sush/Documents/TabbedPaneProject/src/Pics/stopbutton.jpg"));
        
      } else {
        //playback.stop();
          o.playB.doClick();
        captA.setEnabled(true);
        playA.setText("Play");
        playA.setIcon(new ImageIcon("/home/sush/Documents/TabbedPaneProject/src/Pics/playbutton.jpg"));
      }
    }
    }//GEN-LAST:event_playAActionPerformed

    private void PauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PauseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PauseActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        URL mediaUrl=null;
        FileFilter filter = new FileNameExtensionFilter ("mp4","MP4");

        JFileChooser chooser = new JFileChooser("F:\\Video Songs");
        chooser.addChoosableFileFilter(filter);

        int returnval = chooser.showOpenDialog(null);
        try
        {
            if (returnval== JFileChooser.APPROVE_OPTION)
            {
                String str=chooser.getSelectedFile()+"";
                boolean res = str.matches("(.*).mp4") || str.matches("(.*).MP4");
                System.out.println(res+"");
                if (res==false)
                {
                    javax.swing.JOptionPane.showMessageDialog(null,"Choose .mp4 file");
                }
                else{
                    System.out.println("");
                    mediaUrl = chooser.getSelectedFile().toURI().toURL();

                    player.Movie_Player.method1(mediaUrl,arguments);

                }

            }
        } catch (MalformedURLException ex) {

            System.out.println(ex);

        }catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_jLabel1MouseClicked
public static int getLineCountAsSeen(JTextComponent txtComp) 
   {
        Font font = txtComp.getFont();
        FontMetrics fontMetrics = txtComp.getFontMetrics(font);
        int fontHeight = fontMetrics.getHeight();
        int lineCount;
        try {
            int height = txtComp.modelToView(txtComp.getDocument().getEndPosition().getOffset() - 1).y;
            lineCount = height / fontHeight + 1;
        } catch (Exception e) { 
            lineCount = 0;
        }      
        return lineCount;
    }
public void setflag(int l)
    {
       timerflag=l;
    }
    
    public int getflag()
    {
       return timerflag;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabbedPaneFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabbedPaneFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabbedPaneFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabbedPaneFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        arguments = new String[args.length];
        
        for(int i=0;i<args.length;i++)
        {
            arguments[i]=args[i];
            
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try{
                   //UIManager.setLookAndFeel("com.easynth.lookandfeel.EaSynthLookAndFeel");
                    //  UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
                    UIManager.setLookAndFeel("com.seaglasslookandfeel.SeaGlassLookAndFeel");
                   // UIManager.setLookAndFeel("de.muntjak.tinylookandfeel.TinyLookAndFeel");
                }catch(Exception e)
                {
                    System.out.println("NewLookAndFeel");
                }
                new TabbedPaneFrame("Mixed Media Player").setVisible(true);
            }
        });
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Display;
    private javax.swing.JButton Open;
    private javax.swing.JButton Pause;
    public javax.swing.JButton Play;
    private javax.swing.JButton SelectFile;
    private javax.swing.JSlider Slider;
    private javax.swing.JButton Stop;
    public javax.swing.JButton Stop1;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton captA;
    public javax.swing.JButton captB;
    private javax.swing.JButton choose;
    private javax.swing.JButton chooser;
    public javax.swing.JTextArea display;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelKaraoke;
    private javax.swing.JPanel jPanelMP3;
    private javax.swing.JPanel jPanelMP4;
    private javax.swing.JPanel jPanelTimer;
    private javax.swing.JPanel jPanelTrimmer;
    private javax.swing.JPanel jPanelVoiceRecorder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPaneAudio;
    private javax.swing.JTabbedPane jTabbedPaneVideo;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JTextField min;
    public javax.swing.JButton play;
    private javax.swing.JButton play1;
    private javax.swing.JButton playA;
    private javax.swing.JTextField sec;
    private javax.swing.JLabel text1;
    private javax.swing.JLabel text2;
    private javax.swing.JButton trim;
    // End of variables declaration//GEN-END:variables
}

